"""
This type stub file was generated by pyright.
"""

import sys
import platform

"""
cpuinfo

Copyright 2002 Pearu Peterson all rights reserved,
Pearu Peterson <pearu@cens.ioc.ee>
Permission to use, modify, and distribute this software is given under the
terms of the NumPy (BSD style) license.  See LICENSE.txt that came with
this distribution for specifics.

NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
Pearu Peterson

"""
__all__ = ['cpu']
if sys.version_info[0] >= 3:
    ...
else:
    ...
def getoutput(cmd, successful_status=..., stacklevel=...):
    ...

def command_info(successful_status=..., stacklevel=..., **kw):
    ...

def command_by_line(cmd, successful_status=..., stacklevel=...):
    ...

def key_value_from_command(cmd, sep, successful_status=..., stacklevel=...):
    ...

class CPUInfoBase(object):
    """Holds CPU information and provides methods for requiring
    the availability of various CPU features.
    """
    def _try_call(self, func):
        ...
    
    def __getattr__(self, name):
        ...
    
    def _getNCPUs(self):
        ...
    
    def __get_nbits(self):
        ...
    
    def _is_32bit(self):
        ...
    
    def _is_64bit(self):
        ...
    


class LinuxCPUInfo(CPUInfoBase):
    info = ...
    def __init__(self):
        ...
    
    def _not_impl(self):
        ...
    
    def _is_AMD(self):
        ...
    
    def _is_AthlonK6_2(self):
        ...
    
    def _is_AthlonK6_3(self):
        ...
    
    def _is_AthlonK6(self):
        ...
    
    def _is_AthlonK7(self):
        ...
    
    def _is_AthlonMP(self):
        ...
    
    def _is_AMD64(self):
        ...
    
    def _is_Athlon64(self):
        ...
    
    def _is_AthlonHX(self):
        ...
    
    def _is_Opteron(self):
        ...
    
    def _is_Hammer(self):
        ...
    
    def _is_Alpha(self):
        ...
    
    def _is_EV4(self):
        ...
    
    def _is_EV5(self):
        ...
    
    def _is_EV56(self):
        ...
    
    def _is_PCA56(self):
        ...
    
    _is_i386 = ...
    def _is_Intel(self):
        ...
    
    def _is_i486(self):
        ...
    
    def _is_i586(self):
        ...
    
    def _is_i686(self):
        ...
    
    def _is_Celeron(self):
        ...
    
    def _is_Pentium(self):
        ...
    
    def _is_PentiumII(self):
        ...
    
    def _is_PentiumPro(self):
        ...
    
    def _is_PentiumMMX(self):
        ...
    
    def _is_PentiumIII(self):
        ...
    
    def _is_PentiumIV(self):
        ...
    
    def _is_PentiumM(self):
        ...
    
    def _is_Prescott(self):
        ...
    
    def _is_Nocona(self):
        ...
    
    def _is_Core2(self):
        ...
    
    def _is_Itanium(self):
        ...
    
    def _is_XEON(self):
        ...
    
    _is_Xeon = ...
    def _is_singleCPU(self):
        ...
    
    def _getNCPUs(self):
        ...
    
    def _has_fdiv_bug(self):
        ...
    
    def _has_f00f_bug(self):
        ...
    
    def _has_mmx(self):
        ...
    
    def _has_sse(self):
        ...
    
    def _has_sse2(self):
        ...
    
    def _has_sse3(self):
        ...
    
    def _has_ssse3(self):
        ...
    
    def _has_3dnow(self):
        ...
    
    def _has_3dnowext(self):
        ...
    


class IRIXCPUInfo(CPUInfoBase):
    info = ...
    def __init__(self):
        ...
    
    def _not_impl(self):
        ...
    
    def _is_singleCPU(self):
        ...
    
    def _getNCPUs(self):
        ...
    
    def __cputype(self, n):
        ...
    
    def _is_r2000(self):
        ...
    
    def _is_r3000(self):
        ...
    
    def _is_r3900(self):
        ...
    
    def _is_r4000(self):
        ...
    
    def _is_r4100(self):
        ...
    
    def _is_r4300(self):
        ...
    
    def _is_r4400(self):
        ...
    
    def _is_r4600(self):
        ...
    
    def _is_r4650(self):
        ...
    
    def _is_r5000(self):
        ...
    
    def _is_r6000(self):
        ...
    
    def _is_r8000(self):
        ...
    
    def _is_r10000(self):
        ...
    
    def _is_r12000(self):
        ...
    
    def _is_rorion(self):
        ...
    
    def get_ip(self):
        ...
    
    def __machine(self, n):
        ...
    
    def _is_IP19(self):
        ...
    
    def _is_IP20(self):
        ...
    
    def _is_IP21(self):
        ...
    
    def _is_IP22(self):
        ...
    
    def _is_IP22_4k(self):
        ...
    
    def _is_IP22_5k(self):
        ...
    
    def _is_IP24(self):
        ...
    
    def _is_IP25(self):
        ...
    
    def _is_IP26(self):
        ...
    
    def _is_IP27(self):
        ...
    
    def _is_IP28(self):
        ...
    
    def _is_IP30(self):
        ...
    
    def _is_IP32(self):
        ...
    
    def _is_IP32_5k(self):
        ...
    
    def _is_IP32_10k(self):
        ...
    


class DarwinCPUInfo(CPUInfoBase):
    info = ...
    def __init__(self):
        ...
    
    def _not_impl(self):
        ...
    
    def _getNCPUs(self):
        ...
    
    def _is_Power_Macintosh(self):
        ...
    
    def _is_i386(self):
        ...
    
    def _is_ppc(self):
        ...
    
    def __machine(self, n):
        ...
    
    def _is_ppc601(self):
        ...
    
    def _is_ppc602(self):
        ...
    
    def _is_ppc603(self):
        ...
    
    def _is_ppc603e(self):
        ...
    
    def _is_ppc604(self):
        ...
    
    def _is_ppc604e(self):
        ...
    
    def _is_ppc620(self):
        ...
    
    def _is_ppc630(self):
        ...
    
    def _is_ppc740(self):
        ...
    
    def _is_ppc7400(self):
        ...
    
    def _is_ppc7450(self):
        ...
    
    def _is_ppc750(self):
        ...
    
    def _is_ppc403(self):
        ...
    
    def _is_ppc505(self):
        ...
    
    def _is_ppc801(self):
        ...
    
    def _is_ppc821(self):
        ...
    
    def _is_ppc823(self):
        ...
    
    def _is_ppc860(self):
        ...
    


class SunOSCPUInfo(CPUInfoBase):
    info = ...
    def __init__(self):
        ...
    
    def _not_impl(self):
        ...
    
    def _is_i386(self):
        ...
    
    def _is_sparc(self):
        ...
    
    def _is_sparcv9(self):
        ...
    
    def _getNCPUs(self):
        ...
    
    def _is_sun4(self):
        ...
    
    def _is_SUNW(self):
        ...
    
    def _is_sparcstation5(self):
        ...
    
    def _is_ultra1(self):
        ...
    
    def _is_ultra250(self):
        ...
    
    def _is_ultra2(self):
        ...
    
    def _is_ultra30(self):
        ...
    
    def _is_ultra4(self):
        ...
    
    def _is_ultra5_10(self):
        ...
    
    def _is_ultra5(self):
        ...
    
    def _is_ultra60(self):
        ...
    
    def _is_ultra80(self):
        ...
    
    def _is_ultraenterprice(self):
        ...
    
    def _is_ultraenterprice10k(self):
        ...
    
    def _is_sunfire(self):
        ...
    
    def _is_ultra(self):
        ...
    
    def _is_cpusparcv7(self):
        ...
    
    def _is_cpusparcv8(self):
        ...
    
    def _is_cpusparcv9(self):
        ...
    


class Win32CPUInfo(CPUInfoBase):
    info = ...
    pkey = ...
    def __init__(self):
        ...
    
    def _not_impl(self):
        ...
    
    def _is_AMD(self):
        ...
    
    def _is_Am486(self):
        ...
    
    def _is_Am5x86(self):
        ...
    
    def _is_AMDK5(self):
        ...
    
    def _is_AMDK6(self):
        ...
    
    def _is_AMDK6_2(self):
        ...
    
    def _is_AMDK6_3(self):
        ...
    
    def _is_AMDK7(self):
        ...
    
    def _is_AMD64(self):
        ...
    
    def _is_Intel(self):
        ...
    
    def _is_i386(self):
        ...
    
    def _is_i486(self):
        ...
    
    def _is_i586(self):
        ...
    
    def _is_i686(self):
        ...
    
    def _is_Pentium(self):
        ...
    
    def _is_PentiumMMX(self):
        ...
    
    def _is_PentiumPro(self):
        ...
    
    def _is_PentiumII(self):
        ...
    
    def _is_PentiumIII(self):
        ...
    
    def _is_PentiumIV(self):
        ...
    
    def _is_PentiumM(self):
        ...
    
    def _is_Core2(self):
        ...
    
    def _is_singleCPU(self):
        ...
    
    def _getNCPUs(self):
        ...
    
    def _has_mmx(self):
        ...
    
    def _has_sse(self):
        ...
    
    def _has_sse2(self):
        ...
    
    def _has_3dnow(self):
        ...
    
    def _has_3dnowext(self):
        ...
    


if sys.platform.startswith('linux'):
    cpuinfo = LinuxCPUInfo
else:
    cpuinfo = IRIXCPUInfo
cpu = cpuinfo()
