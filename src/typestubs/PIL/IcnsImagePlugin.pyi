"""
This type stub file was generated by pyright.
"""

import sys
from PIL import Image, ImageFile
from typing import Any, Optional

enable_jpeg2k = hasattr(Image.core, "jp2klib_version")
if enable_jpeg2k:
    ...
HEADERSIZE = 8
def nextheader(fobj):
    ...

def read_32t(fobj, start_length, size):
    ...

def read_32(fobj, start_length, size):
    """
    Read a 32bit RGB icon resource.  Seems to be either uncompressed or
    an RLE packbits-like scheme.
    """
    ...

def read_mk(fobj, start_length, size):
    ...

def read_png_or_jpeg2000(fobj, start_length, size):
    ...

class IcnsFile:
    SIZES = ...
    def __init__(self, fobj):
        """
        fobj is a file-like object as an icns resource
        """
        self.dct = ...
        self.fobj = ...
    
    def itersizes(self):
        ...
    
    def bestsize(self):
        ...
    
    def dataforsize(self, size):
        """
        Get an icon resource as {channel: array}.  Note that
        the arrays are bottom-up like windows bitmaps and will likely
        need to be flipped or transposed in some way.
        """
        ...
    
    def getimage(self, size: Optional[Any] = ...):
        ...
    


class IcnsImageFile(ImageFile.ImageFile):
    """
    PIL image support for Mac OS .icns files.
    Chooses the best resolution, but will possibly load
    a different size image if you mutate the size attribute
    before calling 'load'.

    The info dictionary has a key 'sizes' that is a list
    of sizes that the icns file has.
    """
    format = ...
    format_description = ...
    def _open(self):
        self.icns = ...
        self.mode = ...
        self.best_size = ...
        self.size = ...
    
    @property
    def size(self):
        ...
    
    @size.setter
    def size(self, value):
        ...
    
    def load(self):
        self.im = ...
        self.mode = ...
        self.size = ...
    


def _save(im, fp, filename):
    """
    Saves the image as a series of PNG files,
    that are then converted to a .icns file
    using the macOS command line utility 'iconutil'.

    macOS only.
    """
    ...

if sys.platform == "darwin":
    ...
if __name__ == "__main__":
    imf = IcnsImageFile(open(sys.argv[1], "rb"))
    im = Image.open(sys.argv[1])
