"""
This type stub file was generated by pyright.
"""

import sys
from typing import Any, Optional

_viewers = []
def register(viewer, order=...):
    ...

def show(image, title: Optional[Any] = ..., **options):
    r"""
    Display a given image.

    :param image: An image object.
    :param title: Optional title.  Not all viewers can display the title.
    :param \**options: Additional viewer options.
    :returns: True if a suitable viewer was found, false otherwise.
    """
    ...

class Viewer:
    """Base class for viewers."""
    def show(self, image, **options):
        ...
    
    format = ...
    options = ...
    def get_format(self, image):
        """Return format name, or None to save as PGM/PPM"""
        ...
    
    def get_command(self, file, **options):
        ...
    
    def save_image(self, image):
        """Save to temporary file, and return filename"""
        ...
    
    def show_image(self, image, **options):
        """Display given image"""
        ...
    
    def show_file(self, file, **options):
        """Display given file"""
        ...
    


if sys.platform == "win32":
    ...
else:
    class UnixViewer(Viewer):
        format = ...
        options = ...
        def get_command(self, file, **options):
            ...
        
        def show_file(self, file, **options):
            """Display given file"""
            ...
        
    
    
    class DisplayViewer(UnixViewer):
        def get_command_ex(self, file, **options):
            ...
        
    
    
    class EogViewer(UnixViewer):
        def get_command_ex(self, file, **options):
            ...
        
    
    
    class XVViewer(UnixViewer):
        def get_command_ex(self, file, title: Optional[Any] = ..., **options):
            ...
        
    
    
if __name__ == "__main__":
    ...
